# Link Collection:
#  - https://github.com/addy-dclxvi/i3-starterpack


# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
bindsym $mod+d exec rofi -lines 12 -padding 18 -width 60 -location 0 -show run -sidebar-mode -columns 3 -font 'Noto Sans 8'
bindsym $mod+t exec rofi -lines 12 -padding 18 -width 60 -location 0 -show window -sidebar-mode -columns 3 -font 'Noto Sans 8'
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# change focus output
bindsym $mod+Control+h focus output left
bindsym $mod+Control+j focus output down
bindsym $mod+Control+k focus output up
bindsym $mod+Control+l focus output right

# alternatively, you can use the cursor keys:
bindsym $mod+Control+Left focus output left
bindsym $mod+Control+Down focus output down
bindsym $mod+Control+Up focus output up
bindsym $mod+Control+Right focus output right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# move current workspace
bindsym $mod+Control+Shift+h move workspace to output left
bindsym $mod+Control+Shift+j move workspace to output down
bindsym $mod+Control+Shift+k move workspace to output up
bindsym $mod+Control+Shift+l move workspace to output right

# alternatively, you can use the cursor keys:
bindsym $mod+Control+Shift+Left move workspace to output left
bindsym $mod+Control+Shift+Down move workspace to output up
bindsym $mod+Control+Shift+Up move workspace to output down
bindsym $mod+Control+Shift+Right move workspace to output right

# split in horizontal orientation
bindsym $mod+v split h

# split in vertical orientation
bindsym $mod+c split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

bindsym XF86AudioLowerVolume exec --no-startup-id "amixer -q -D pulse sset Master 5%- && pkill -RTMIN+10 i3blocks"
bindsym XF86AudioRaiseVolume exec --no-startup-id "amixer -q -D pulse sset Master 5%+ && pkill -RTMIN+10 i3blocks"
bindsym XF86AudioMute exec --no-startup-id "amixer -D pulse set Master 1+ toggle && pkill -RTMIN+10 i3blocks"
bindsym XF86AudioPlay exec --no-startup-id "playerctl play-pause"
bindsym XF86AudioStop exec --no-startup-id "playerctl stop"
bindsym XF86AudioNext exec --no-startup-id "playerctl next"
bindsym XF86AudioPrev exec --no-startup-id "playerctl previous"
bindsym XF86MonBrightnessDown exec --no-startup-id "xbacklight -dec 15"
bindsym XF86MonBrightnessUp exec --no-startup-id "xbacklight -inc 15"

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# make screenshot
bindsym --release $mod+i exec --no-startup-id mkdir -p ~/Pictures/Screenshots/ && import ~/Pictures/Screenshots/$(date +%Y-%m-%d_%H:%M:%S).png

# resize window (you can alxso use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

set $keyboard_layout Keyboard Layout: (d) German, (u) US English
mode "$keyboard_layout" {
        bindsym d exec --no-startup-id setxkbmap de ,mode "default"
#        bindsym u exec --no-startup-id setxkbmap us ,mode "default" -option ctrl:nocaps
        bindsym u exec --no-startup-id setxkbmap us ,mode "default"
	# back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+b mode "$keyboard_layout"


# START i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        position top
        status_command SCRIPT_DIR=~/.config/i3/i3blocks/blocklets i3blocks
}

# TODO:
# - i3-save-tree
# - i3 scratchpad
# - exec standard programs
# - use xcwd to spawn terminals in the folder of the last opened https://github.com/schischi/xcwd
#   - bindsym $mod+Return exec urxvt -cd $(xcwd)
exec vmware-user-suid-wrapper
